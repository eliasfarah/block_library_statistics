From 4b60e970abd2736d77b56181d4a832d02d35fce3 Mon Sep 17 00:00:00 2001
From: Elias Farah <elias@eopen.com.br>
Date: Wed, 18 Aug 2021 09:44:08 -0300
Subject: [PATCH] Added record viewed trigger

---
 mod/data/classes/event/record_viewed.php | 127 +++++++++++++++++++++++
 mod/data/lib.php                         |  14 +++
 2 files changed, 141 insertions(+)
 create mode 100644 mod/data/classes/event/record_viewed.php

diff --git a/mod/data/classes/event/record_viewed.php b/mod/data/classes/event/record_viewed.php
new file mode 100644
index 00000000000..253495602e6
--- /dev/null
+++ b/mod/data/classes/event/record_viewed.php
@@ -0,0 +1,127 @@
+<?php
+// This file is part of Moodle - http://moodle.org/
+//
+// Moodle is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// Moodle is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
+
+/**
+ * The mod_data record viewed event.
+ *
+ * @package    mod_data
+ * @copyright  2014 Mark Nelson <markn@moodle.com>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+
+namespace mod_data\event;
+
+defined('MOODLE_INTERNAL') || die();
+
+/**
+ * The mod_data record viewed event class.
+ *
+ * @property-read array $other {
+ *      Extra information about event.
+ *
+ *      - int dataid: the id of the data activity.
+ * }
+ *
+ * @package    mod_data
+ * @since      Moodle 2.7
+ * @copyright  2014 Mark Nelson <markn@moodle.com>
+ * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
+ */
+class record_viewed extends \core\event\base
+{
+
+    /**
+     * Init method.
+     *
+     * @return void
+     */
+    protected function init()
+    {
+        $this->data['objecttable'] = 'data_records';
+        $this->data['crud'] = 'r';
+        $this->data['edulevel'] = self::LEVEL_PARTICIPATING;
+    }
+
+    /**
+     * Return localised event name.
+     *
+     * @return string
+     */
+    public static function get_name()
+    {
+        return get_string('eventrecordviewed', 'mod_data');
+    }
+
+    /**
+     * Returns description of what happened.
+     *
+     * @return string
+     */
+    public function get_description()
+    {
+        return "The user with id '$this->userid' viewed the data record with id '$this->objectid' in the data activity " .
+            "with course module id '$this->contextinstanceid'.";
+    }
+
+    /**
+     * Get URL related to the action.
+     *
+     * @return \moodle_url
+     */
+    public function get_url()
+    {
+        return new \moodle_url('/mod/data/view.php', array('d' => $this->other['dataid'], 'r' => $this->other['recordid']));
+    }
+
+    /**
+     * Get the legacy event log data.
+     *
+     * @return array
+     */
+    public function get_legacy_logdata()
+    {
+        return array($this->courseid, 'data', 'record viewed', 'view.php?id=' . $this->contextinstanceid,
+            $this->other['dataid'], $this->other['recordid'], $this->contextinstanceid);
+    }
+
+    /**
+     * Custom validation.
+     *
+     * @throws \coding_exception when validation does not pass.
+     * @return void
+     */
+    protected function validate_data()
+    {
+        parent::validate_data();
+
+        if (!isset($this->other['dataid'])) {
+            throw new \coding_exception('The \'dataid\' value must be set in other.');
+        }
+    }
+
+    public static function get_objectid_mapping()
+    {
+        return array('db' => 'data_records', 'restore' => 'data_record');
+    }
+
+    public static function get_other_mapping()
+    {
+        $othermapped = array();
+        $othermapped['dataid'] = array('db' => 'data', 'restore' => 'data');
+
+        return $othermapped;
+    }
+}
diff --git a/mod/data/lib.php b/mod/data/lib.php
index 7b6014427bd..ec179eacfe5 100644
--- a/mod/data/lib.php
+++ b/mod/data/lib.php
@@ -1520,6 +1520,20 @@ function data_print_template($template, $records, $data, $search='', $page=0, $r
             $replacement[] = 'notapproved';
         }
 
+        // Trigger an event for record viewed.
+        if (($_REQUEST['rid'] != '') || ($_REQUEST['mode'] != '')) {            
+            $event = \mod_data\event\record_viewed::create(array(
+                'objectid' => $data->id,
+                'context' => context_module::instance($cm->id),
+                'courseid' => $courseid,
+                'other' => array(
+                    'dataid' => $data->id,
+                    'recordid' => $record->id
+                )
+            ));
+            $event->trigger();
+        }
+
         $patterns[]='##comments##';
         if (($template == 'listtemplate') && ($data->comments)) {
 
-- 
2.30.1 (Apple Git-130)

